// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.1.1'
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

ext {
    applicationId = "com.yahier.androidtest"
    compileSdkVersion = 25
    buildToolsVersion = "25.0.0"
    minSdkVersion = 21
    targetSdkVersion = 25
    versionCode = 1
    versionName = "1.0"
    javaVersion = JavaVersion.VERSION_1_8
    storeFile = "csair-android-key"
    storePassword = ""
    keyAlias = ""
    keyPassword = ""
    abiFilters = "armeabi"
    resConfigs = ["en", "zh"]

    useMTA = false
    useTalkingData = false
    useTingYun = false

    isLBSDebug = false
    isNotificationDebug = false
    isPayDebug = false
    isSocialDebug = false
    isStatusDebug = false

    if (System.properties['APP_VERSION']) {
        def appVersion = System.properties['APP_VERSION'] as String
        def lastIndexOfDot = appVersion.lastIndexOf(".");
        versionName = appVersion.substring(0, lastIndexOfDot)
        versionCode = appVersion.substring(lastIndexOfDot + 1) as int
    }
    if (System.properties['NEW_VERSION']) {
        def appVersion = System.properties['NEW_VERSION'] as String
        def lastIndexOfDot = appVersion.lastIndexOf(".");
        versionName = appVersion.substring(0, lastIndexOfDot)
        versionCode = appVersion.substring(lastIndexOfDot + 1) as int
    }
    if (System.properties['Apk_Type']) {
        def apkType = System.properties['Apk_Type'] as String
        if ("resguardRelease" == apkType) {
            useMTA = true
            useTalkingData = true
            useTingYun = true
        }
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}

//测试运行独立的yahier.gradle文件  运行时 ./gradlew hello.
apply from: "yahier.gradle"

//这样也可以运行
//task hello {
//    println 'Hello,yahier'
//}
