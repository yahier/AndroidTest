package array;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;

public class ByteArrayStream {
	public static void main(String[] args) {
		String s = "1";
		byte b[] = s.getBytes();
		String t = b.toString();

		System.out.println(t);
		test();
	}

	static void test() {
		// String s = "12345abcd去";
		byte b[] = { 66, 77, -50, -105, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 40, 0,
				0, 0, 102, 0, 0, 0, 126, 0, 0, 0, 1, 0, 24, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35,
				35, 35, 31, 34, 31, 29, 32, 29, 27, 30, 27, 26, 29, 26, 25, 28,
				25, 24, 27, 24, 31, 34, 31, 38, 41, 38, 36, 39, 36, 35, 38, 35,
				34, 37, 34, 33, 36, 33, 32, 35, 32, 31, 34, 31, 30, 33, 30, 29,
				32, 29, 29, 32, 29, 30, 33, 30, 30, 33, 30, 30, 33, 30, 30, 33,
				30, 31, 34, 31, 31, 34, 31, 31, 34, 31, 32, 35, 32, 33, 36, 33,
				32, 37, 34, 34, 39, 36, 33, 40, 37, 34, 41, 38, 28, 35, 32, 22,
				29, 28, 50, 59, 58, 80, 88, 89, 102, 110, 111, 124, -125, -122,
				-127, -120, -117, -121, -114, -109, -124, -117, -112, -127,
				-121, -114, 127, -122, -115, 127, -122, -115, -128, -119, -110,
				-124, -116, -105, -96, -88, -77, 123, -125, -114, -109, -101,
				-90, -85, -77, -65, -96, -88, -77, -107, -99, -88, -81, -73,
				-62, -121, -113, -102, -115, -106, -97, -109, -100, -91, -116,
				-106, -100, -123, -113, -107, -121, -111, -105, -118, -108,
				-102, -116, -106, -101, -114, -104, -99, -118, -108, -103,
				-121, -111, -106, -124, -113, -111, -125, -116, -114, 107, 117,
				117, 85, 93, 94, 45, 53, 54, 8, 14, 15, 18, 25, 24, 30, 35, 32,
				32, 37, 34, 36, 39, 36, 34, 37, 33, 33, 37, 30, 31, 35, 28, 29,
				33, 26, 27, 32, 23, 26, 31, 22, 24, 29, 20, 23, 28, 19, 25, 30,
				21, 27, 32, 23, 29, 34, 25, 31, 35, 28, 33, 37, 30, 35, 38, 34,
				37, 40, 36, 39, 42, 39, 34, 37, 34, 30, 33, 30, 25, 28, 25, 21,
				24, 21, 22, 25, 22, 25, 25, 23, 25, 25, 23, 27, 26, 24, 26, 25,
				23, 26, 25, 23, 26, 25, 23, 26, 25, 23, 26, 25, 23, 0, 0, 35,
				35, 35, 31, 34, 31, 29, 32, 29, 27, 30, 27, 26, 29, 26, 25, 28,
				25, 24, 27, 24, 31, 34, 31, 38, 41, 38, 36, 39, 36, 35, 38, 35,
				34, 37, 34, 33, 36, 33, 32, 35, 32, 31, 34, 31, 30, 33, 30, 29,
				32, 29, 29, 32, 29, 30, 33, 30, 30, 33, 30, 30, 33, 30, 30, 33,
				30, 31, 34, 31, 31, 34, 31, 31, 34, 31, 32, 35, 32, 33, 36, 33,
				32, 37, 34, 34, 39, 36, 33, 40, 37, 34, 41, 38, 28, 35, 32, 22,
				29, 28, 50, 59, 58, 80, 88, 89, 102, 110, 111, 124, -125, -122,
				-127, -120, -117, -121, -114, -109, -124, -117, -112, -127,
				-121, -114, 127, -122, -115, 127, -122, -115, -128, -119, -110,
				-124, -116, -105, -80, -72, -61, -101, -93, -82, -93, -85, -74,
				-85, -77, -65, -96, -88, -77, -107, -99, -88, -81, -73, -62,
				-121, -113, -102, -115, -106, -97, -109, -100, -91, -116, -106,
				-100, -123, -113, -107, -121, -111, -105, -118, -108, -102,
				-116, -106, -101, -114, -104, -99, -118, -108, -103, -121,
				-111, -106, -124, -113, -111, -125, -116, -114, 107, 117, 117,
				85, 93, 94, 45, 53, 54, 8, 14, 15, 18, 25, 24, 30, 35, 32, 32,
				37, 34, 36, 39, 36, 34, 37, 33, 33, 37, 30, 31, 35, 28, 29, 33,
				26, 27, 32, 23, 26, 31, 22, 24, 29, 20, 23, 28, 19, 25, 30, 21,
				27, 32, 23, 29, 34, 25, 31, 35, 28, 33, 37, 30, 35, 38, 34, 37,
				40, 36, 39, 42, 39, 34, 37, 34, 30, 33, 30, 25, 28, 25, 21, 24,
				21, 22, 25, 22, 25, 25, 23, 25, 25, 23, 27, 26, 24, 26, 25, 23,
				26, 25, 23, 26, 25, 23, 26, 25, 23, 26, 25, 23, 0, 0, 35, 35,
				35, 31, 34, 31, 29, 32, 29, 28, 31, 28, 27, 30, 27, 26, 29, 26,
				25, 28, 25, 30, 33, 30, 35, 38, 35, 34, 37, 34, 34, 37, 34, 33,
				36, 33, 33, 36, 33, 32, 35, 32, 31, 34, 31, 29, 32, 29, 28, 31,
				28, 28, 31, 28, 29, 32, 29, 29, 32, 29, 30, 33, 30, 30, 33, 30,
				30, 33, 30, 30, 33, 30, 31, 34, 31, 32, 35, 32, 34, 37, 34, 33,
				38, 35, 35, 40, 37, 33, 40, 37, 34, 41, 38, 31, 38, 35, 28, 35,
				34, 60, 69, 68, 95, 103, 104, 111, 119, 120, -128, -121, -118,
				-124, -117, -114, -119, -112, -107, -121, -114, -109, -123,
				-117, -110, -122, -115, -108, -120, -113, -106, -116, -107,
				-98, -110, -102, -91, -88, -80, -69, -98, -90, -79, -93, -85,
				-74, -88, -80, -68, -93, -85, -74, -98, -90, -79, -86, -78,
				-67, -106, -98, -87, -102, -93, -84, -98, -89, -80, -102, -92,
				-86, -106, -96, -90, -106, -96, -90, -106, -96, -90, -107, -97,
				-92, -107, -97, -92, -110, -100, -95, -113, -103, -98, -116,
				-105, -103, -117, -108, -106, 123, -123, -123, 108, 116, 117,
				46, 54, 55, 21, 27, 28, 24, 31, 30, 29, 34, 31, 31, 36, 33, 36,
				39, 36, 34, 37, 33, 32, 36, 29, 30, 34, 27, 28, 32, 25, 27, 32,
				23, 26, 31, 22, 24, 29, 20, 23, 28, 19, };

		System.out.println("length1:"+b.length);
		String t = new String(b);
		System.out.println(t);
		
		byte[] c = t.getBytes();
		System.out.println("length2:"+c.length);
		System.out.println(Arrays.toString(c));
		

	}

	static void s(byte[] data) {
		ByteArrayInputStream out = new ByteArrayInputStream(data);
		String con = out.toString();
		System.out.println(con);
		back(con);
	}

	static void back(String s) {
		ByteArrayOutputStream bout = new ByteArrayOutputStream();
		DataOutputStream dos = new DataOutputStream(bout);
		try {
			dos.writeUTF(s);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		byte[] buf = bout.toByteArray();// 获取内存缓冲区中的数据
		Arrays.toString(buf);

	}

}
